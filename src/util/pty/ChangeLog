Thu Feb 11 22:24:03 1999  Tom Yu  <tlyu@mit.edu>

	* sane_hostname.c: Force maxlen to be 16 if it's less than 16,
	since otherwise a numeric IP address won't fit.

	* Makefile.in: Add sane_hostname.{o,c}

	* libpty.h: Add prototype for make_sane_hostname.

	* sane_hostname.c: New file; add function to "sanitize" hostname
	for logging purposes.

Mon Apr  6 19:35:33 1998  Tom Yu  <tlyu@voltage-multiplier.mit.edu>

	* update_utmp.c (pty_update_utmp): Don't record LOGIN_PROCESS
	entries, as they confuse last on some systems. [pty/569]

Thu Mar 12 18:09:25 1998  Tom Yu  <tlyu@mit.edu>

	* update_utmp.c (pty_update_utmp): Fix bogus entry of
	PTY_LOGIN_PROCESS types on BSD-ish systems. [pty/531]

Sun Dec  7 00:05:28 1997  Tom Yu  <tlyu@mit.edu>

	* getpty.c (pty_getpty): Fix goof in previous, which introduced
	another fencepost error.

Thu Dec  4 21:48:12 1997  Tom Yu  <tlyu@mit.edu>

	* getpty.c (pty_getpty): Fix checks on string lengths to account
	for terminating nul character.  Some whitespace fixups.

Wed Dec  3 17:16:44 1997  Tom Yu  <tlyu@mit.edu>

	* pty_err.et: Add PTY_OPEN_SLAVE_TOOSHORT error code.

	* open_slave.c (pty_open_slave): Check to ensure that the slave
	name is not NULL or zero-length.

Tue Jun  3 23:05:07 1997  Theodore Y. Ts'o  <tytso@mit.edu>

	* getpty.c (pty_getpty): Remove erroneous space from the HPUX open().

Thu Dec  5 22:43:35 1996  Theodore Y. Ts'o  <tytso@mit.edu>

	* update_utmp.c (pty_update_utmp): Apply platform specific patch
		so that HPUX works.  (Kludge for 1.0 release) [PR#40]

Fri Nov 22 11:52:52 1996  Sam Hartman  <hartmans@mit.edu>

	* configure.in : Make sure time_t is define [203]
	* update_wtmp.c (ptyint_update_wtmp): Use time_t for call to time(2). [203]

Fri Nov 15 08:33:54 1996  Ezra Peisach  <epeisach@mit.edu>

	* update_utmp.c (pty_update_utmp): Handle case where utmp uses
		ut_exit.e_exit and utmpx uses ut_exit.ut_exit.

	* configure.in (UT_EXIT_STRUCTURE_DIFFER): If utmpx.h exists, and
		getutmpx does not exist then test if the ut_exit part of
		the utmp/utmpx structure is a structure and if their types
		differ. (e_exit vs. ut_exit).

Fri Nov  8 17:45:42 1996  Theodore Y. Ts'o  <tytso@mit.edu>

	* update_utmp.c (pty_update_utmp): Add code which attempts to
		compensate for systems that don't have getutmpx()

	* configure.in: Check for getutmpx().  Replace calls to
		AC_FUNC_CHECK with AC_HAVE_FUNCS().

Thu Jun 13 22:14:24 1996  Tom Yu  <tlyu@voltage-multiplier.mit.edu>

	* configure.in: remove ref to ET_RULES


Thu Jun 13 14:12:16 1996  Sam Hartman  <hartmans@mit.edu>

	* update_wtmp.c (ptyint_update_wtmp): Only update wtmpx if we have
 	updwtmpx.  This probably should be more general, but I'm not
 	really sure of HP caviats.

	* configure.in :  check for updwtmpx

	* getpty.c (pty_getpty): Actually check for 256 ptys on SunOS and
 	other old-style systems.
Tue Apr 16 22:06:36 1996  Ken Raeburn  <raeburn@cygnus.com>

	* dump-utmp.c: New file.  Not automatically used by anything, but
	may be useful for examining utmp/wtmp files when comparing
	behavior against system software.

	Sun Mar 31 02:04:28 1996  Ken Raeburn  <raeburn@cygnus.com>

	* update_utmp.c (pty_update_utmp): Always use id "cons" for
	console.  For HP-UX, omit "kl" prefix.  Reindent for readability.
	* update_wtmp.c (ptyint_update_wtmp): For HP-UX, copy ut_id and
	ut_type from input utmp structure.  Reindent for readability.

	Wed Mar 27 21:14:33 1996  Marc Horowitz <marc@mit.edu>

	* init_slave.c (pty_initialize_slave): Spurious signal stuff
		which did nothing deleted.

Tue Apr 16 13:43:43 1996  Sam Hartman  <hartmans@mit.edu>

	* configure.in :  Don't use streams on HPUX.

	* getpty.c (pty_getpty): Check /dev/ptym/clone for HPUX10, only
 	try /dev/ptmx if HAVE_STREAMS defined so we can bipass for HPUX9.

Sun Apr 14 00:36:33 1996  Sam Hartman  <hartmans@mit.edu>

	* pty-int.h: Don't include sys/wait.h here.

	* configure.in : Check for waitpid.

Sat Apr 13 18:58:43 1996  Sam Hartman  <hartmans@mit.edu>

	* cleanup.c (pty_cleanup): If we are doing a vhangup, then fork
 	and dissociate on hangup.  This makes the HP happy, because there
 	is no way to get rid of a controlling terminal besides setsid() on
 	the HP.

Sun Mar 24 19:59:14 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* configure.in : Do streams handling by deciding what modules to
 	push for each system.

	* init_slave.c (pty_initialize_slave): Better abstraction for
 	dealing with what modules get pushed on what streams system.
  	There is a list of modules controlled on a module-by-module basis
 	by configure.in, and the modules included in that list are pushed.

	* void_assoc.c: Duplicate comment from open_ctty.c explaining that
 	it's OK to call void_association twice, and giving the caviats
 	about setsid.

	* open_ctty.c (pty_open_ctty): Remove test to make sure /dev/tty
 	worked, so we can push the streams for the HP.

	* open_slave.c (pty_open_slave): Test to see if /dev/tty works
 	only after calling pty_initialize_slave.

Sat Mar 23 15:24:38 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* configure.in : Remove shadow passwords check because nothing in
 	libpty cares about the result; remove use of libkrb5, libkrb4,
 	libkadm; Check for _getpty

	* getpty.c (pty_getpty): Support _getpty for Irix; Irix has
 	/dev/ptmx, but it doesn't work correctly at all.  Also, Irix,
 	tends to create device nodes on the fly.

	* pty-int.h: No need to include sys/socket.h

Sat Feb 24 21:34:58 1996  Theodore Y. Ts'o  <tytso@dcl>

	* vhangup.c (ptyint_vhangup): Don't do call vhangup() if system
		doesn't have it.

Sat Jan 27 01:13:34 1996  Mark Eichin  <eichin@cygnus.com>

	* void_assoc.c (ptyint_void_association): if we don't have
	TIOCNOTTY (HP/UX 9 for example) don't try to use it.

Fri Jan 26 00:26:37 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* cleanup.c (pty_cleanup): Update utmp only if update_utmp is true.

Tue Jan 16 13:52:22 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* void_assoc.c (ptyint_void_association): Move setsid call from
        open_ctty to void_association.

	* logwtmp.c (pty_logwtmp): Pass user argument to update_wtmp.

	* update_utmp.c (update_utmp): Implement PTY_UTMP_USERNAME_VALID flag

Mon Jan 15 15:48:37 1996  Sam Hartman  (hartmans@justforfun)

	* cleanup.c: Change to indiciate utmp user name is valid.

	* 

Mon Jan 15 15:21:16 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* update_utmp.c (pty_update_utmp): Add flags field; use ttyslot
        only if reasonable.

Fri Jan 12 16:33:37 1996  Sam Hartman  <hartmans@infocalypse>

	* open_slave.c (pty_open_slave): Don't use fchmod or fchown; they
 	don't buy much security unless /dev is world-writable and may
 	prevent Solaris lossage.

Thu Dec 21 00:12:58 1995  Sam Hartman  <hartmans@portnoy>

	* open_slave.c (pty_open_slave): Open with no delay.


Wed Jan 10 22:20:04 1996  Theodore Y. Ts'o  <tytso@dcl>

	* open_slave.c (pty_open_slave): Added hack by Doug Engert to get
		util/pty to work under Solaris.  We should double check to
		make sure this is a correct fix.


Sun Nov 12 12:44:33 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* open_ctty.c (pty_open_ctty): Remove redundant Ultrix calls to setpgrp()

Sun Oct 22 03:48:37 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* update_wtmp.c (ptyint_update_wtmp): Add comments explaining why ifdefs are right.

Sun Oct 22 01:20:52 1995  Sam Hartman  <hartmans@infocalypse>

	* update_wtmp.c (ptyint_update_wtmp): Try utx not uts.

Mon Oct 16 17:41:45 1995  Sam Hartman  <hartmans@tertius.mit.edu>



	* update_wtmp.c (ptyint_update_wtmp): Update to take host name, so
        we can get the full host name if it is chopped in utmp.
	* update_wtmp.c (ptyint_update_wtmp):  Insert fallback path for Sunos and others, return defined value.




	* update_utmp.c (pty_update_utmp): Incorperate utmpx handling patch from ramus@nersc.gov to deal with support for longer hostanmes in utmpx.


*update_utmp.c: Add return statement and fallback path for Sunos.

Sat Oct 14 20:49:40 1995  Sam Hartman  <hartmans@tertius.mit.edu>
Fri Aug 11 17:49:36 1995  Samuel D Hartman  (hartmans@vorlon)


Fri Sep 29 14:18:03 1995  Theodore Y. Ts'o  <tytso@dcl>
	* update_wtmp.c (ptyint_update_wtmp): If EMPTY not defined as a
        utmp type, use DEAD_PROCESS.



	* configure.in:
	* Makefile.in: Use the SubdirLibraryRule defined in aclocal.m4 to
		create the DONE file (and to properly clean it up).

Mon Sep 25 16:42:36 1995  Theodore Y. Ts'o  <tytso@dcl>

	* Makefile.in: Removed "foo:: foo-$(WHAT)" lines from the
		Makefile. 

Thu Sep  7 19:13:05 1995  Mark Eichin  <eichin@cygnus.com>

	* update_utmp.c: ultimately fall back to /etc/utmp for UTMP_FILE,
	if it is still missing after all previous efforts.
	* update_wtmp.c: /usr/adm/wtmp for WTMP_FILE likewise.

Thu Aug 24 18:40:48 1995  Theodore Y. Ts'o  <tytso@dcl>

	* .Sanitize: Update file list

Tue Aug 15 21:42:16 1995    <tytso@rsts-11.mit.edu>

	* update_wtmp.c (ptyint_update_wtmp): If EMPTY is not defined,
		then set ut.ut_type to 0 instead.



Fri Aug 11 15:49:30 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* Makefile.in (CFILES): Rename initialize_slave.c to init_slave.c
        so it isn't truncated in libpty.a.

Fri Aug 11 01:12:03 1995  Sam Hartman  <hartmans@infocalypse>

	* initialize_slave.c (pty_initialize_slave): You really do need to
        push and pop the streams on a Sun. 

Fri Aug 11 00:49:23 1995  Sam Hartman  <hartmans@dragons-lair.MIT.EDU>

	* configure.in (ac_cv_func_setsid): Pretend that Ultrix doesn't
        have setsid, because if it does make the call then the pty never
        becomes controlling tty.

Thu Aug 10 09:47:07 1995  Sam Hartman  <hartmans@dragons-lair.MIT.EDU>

	* open_ctty.c (pty_open_ctty): Move setpgrp() after void_assoc call

Wed Aug  9 00:16:40 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* pty-int.h (VHANG_first): Change defines so VHANG_FIRST doesn't
        get defined under Ultrix because Ultrix can only establish
        controlling terminal once per process and we need to get
        controlling terminal again after vhangup().

	* getpty.c (pty_getpty): Use the right test for slave buffer length.

Tue Aug  8 22:20:33 1995  Tom Yu  <tlyu@lothlorien.MIT.EDU>

	* update_utmp.c (UTMP_FILE): _PATH_UTMP under NetBSD, not
		_UTMP_PATH; also fix typo (missing '&' on reference to
		ent)

Tue Aug  8 20:47:01 1995  Tom Yu  <tlyu@dragons-lair.MIT.EDU>

	* update_utmp.c (pty_update_utmp): change #ifdef NO_UT_PID to
		#ifndef

Tue Aug  8 09:13:50 1995  Sam Hartman  <hartmans@pao.mit.edu>

	* open_slave.c (pty_open_slave): Dissociate from controlling
        terminal before calling revoke.
	(pty_open_slave): Don't ask for a controlling terminal unless we need it.

Tue Aug  8 20:32:08 1995  Tom Yu  <tlyu@dragons-lair.MIT.EDU>

	* update_utmp.c: flush preprocessor directive to left margin.
	* pty_err.et: Fix typo in error description.

	* cleanup.c (pty_cleanup): Don't change slave before revoking it.  Also return a value all the time, not just on systems without revoke.


	* update_utmp.c (pty_update_utmp): Move #ifdef back to column 1.

Mon Aug  7 17:41:39 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* cleanup.c (pty_cleanup): Call pty_update_utmp using new interface.

	* update_utmp.c logwtmp.c : Call ptyint_update_wtmp not pty_update_wtmp.

	* cleanup.c (pty_cleanup): We can't use pid_t because we need to
        use something in libpty.h and we can't wait for pid_t to be
        defined there because we may not have configure.

	* update_wtmp.c (pty_update_wtmp): Rename to ptyint_update_wtmp.

	* update_utmp.c (pty_update_utmp): Change interface so it doesn't take a struct utmp.

	* libpty.h: Remove pty_update_wtmp as it's becoming  an internal interface.

Sat Aug  5 01:00:35 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* open_slave.c (pty_open_slave): pty_open_ctty returns != 0 on
		error, not less than.

Fri Aug  4 13:59:11 1995  Theodore Y. Ts'o  <tytso@dcl>

	* libpty.h (pty_cleanup): Fix argument type of pid to patch that
		used in the C file.  Include <utmpx.h> if present.  Only
		include <utmp.h> if it is present.
	
	* configure.in: Check for utmp.h and utmpx.h

Fri Aug  4 00:59:20 1995  Tom Yu  <tlyu@dragons-lair.MIT.EDU>

	* Makefile.in: use libupdate so to not get multiple copies of
		object files upon rebuild.

	* vhangup.c (ptyint_vhangup): Make sure preprocessor directives
		are at left margin.

	* open_slave.c (pty_open_slave): Make sure preprocessor directives
		are at left margin.

	* open_ctty.c (pty_open_ctty): Make sure preprocessor directives
		are at left margin.

	* cleanup.c (pty_cleanup): Add missing declarations for retval and
		fd.  Also, align preprocessor directives with left margin.

Thu Aug  3 15:04:34 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* configure.in: Check for vhangup and killpg.

	* cleanup.c (pty_cleanup): Kill the process group associated with
        the pty if using revoke.  This won't always work, but will at
        least attempt to remove processes associated with the pty.

Wed Aug  2 11:59:19 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* init.c (pty_init): New file to handle initialization--currently only error tables.

	* getpty.c (pty_getpty): Reverse sense of logic tests so they work.  

Tue Aug  1 08:20:06 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* cleanup.c (pty_cleanup): Allow pid to be zero (unknown).

	* pty-int.h: Define VHANG_FIRST and VHANG_LAST based on presence
        of vhangup.

	* pty_err.et: Define PTY_GETPTY_SLAVE_TOOLONG

	* getpty.c (pty_getpty): Close slave side if we call openpty.

	(pty_getpty): Take length parameter; return error if it isn't big enough.



Tue Aug  1 12:06:14 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* open_ctty.c (pty_open_ctty): Fixed typo TIOCSTTY to TIOCSCTTY.


