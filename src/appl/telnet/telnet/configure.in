AC_INIT(telnet.c)
CONFIG_RULES
AC_PROG_INSTALL
AC_VFORK
AC_CHECK_HEADERS(string.h arpa/nameser.h)
AC_HAVE_HEADERS(unistd.h sys/select.h stdlib.h arpa/inet.h)
AC_CHECK_LIB(termcap,main,AC_DEFINE(TERMCAP)
LIBS="$LIBS -ltermcap",
  AC_CHECK_LIB(curses,setupterm,LIBS="$LIBS -lcurses")
)
AC_CHECK_FUNCS(setupterm) dnl If we have it, use it so we don't get 
dnl endless loop with tcgetent
AC_HEADER_CHECK(termios.h,AC_DEFINE(USE_TERMIO) ac_termio=1)
if test -z "$ac_termio"; then
AC_HEADER_CHECK(termio.h,AC_DEFINE(SYSV_TERMIO),ac_sysv_termio=1)
if test -z "$ac_sysv_termio"; then
  AC_MSG_CHECKING([for cc_t in termio.h])
  AC_CACHE_VAL(krb_cv_type_cc_t,
  [AC_TRY_LINK([cc_t],[#include <termio.h>],
  [cc_t foo;],krb_cv_type_cc_t=yes,krb_cv_type_cc_t=no)])
  AC_MSG_RESULT($krb_cv_type_cc_t)
  if test $krb_cv_type_cc_t = no; then
    AC_DEFINE(NO_CC_T)
  fi
fi
fi
AC_FUNC_CHECK(gettosbyname,AC_DEFINE(HAS_GETTOS))
AC_HEADER_CHECK(sys/filio.h,AC_DEFINE(FILIO_H))
AC_HEADER_CHECK(sys/stream.h,AC_DEFINE(STREAMS))
AC_FUNC_CHECK(cgetent,AC_DEFINE(HAS_CGETENT))
AC_FUNC_CHECK(setupterm,AC_DEFINE(HAS_SETUPTERM))
CHECK_SIGNALS
if test "$KRB4_LIB" = ''; then
	AC_MSG_RESULT(No Kerberos 4 authentication)
else
	AC_MSG_RESULT(Kerberos 4 authentication enabled)
	AC_DEFINE(KRB4)
fi
dnl
dnl For the encryption code we need libdes425
dnl Fix post beta-6
withval=no
AC_ARG_WITH([krb4],[],,withval=yes)
if test $withval = no; then
	KRB4_CRYPTO_LIB='-ldes425'
	DEPKRB4_CRYPTO_LIB='$(TOPLIBD)/libdes425.a'
fi
dnl
USE_KRB4_LIBRARY
USE_ANAME
KRB5_LIBRARIES
V5_USE_SHARED_LIB
V5_AC_OUTPUT_MAKEFILE
