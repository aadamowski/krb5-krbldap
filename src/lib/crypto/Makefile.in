CFLAGS = $(CCOPTS) $(DEFS) -I$(srcdir)/crc32 -I$(srcdir)/des -I$(srcdir)/md4 -I$(srcdir)/md5 -I$(srcdir)/sha

##DOSBUILDTOP = ..\..
##DOSLIBNAME=crypto.lib

MAC_SUBDIRS = des sha md4 md5 crc32 os

OBJS=	cryptoconf.$(OBJEXT) \
	encrypt_data.$(OBJEXT) \
	decrypt_data.$(OBJEXT) \
	des_crc.$(OBJEXT) \
	des_md5.$(OBJEXT) \
	des3_sha.$(OBJEXT) \
	des3_raw.$(OBJEXT) \
	raw_des.$(OBJEXT)

SRCS=	$(srcdir)/cryptoconf.c \
	$(srcdir)/encrypt_data.c \
	$(srcdir)/decrypt_data.c \
	$(srcdir)/des_crc.c \
	$(srcdir)/des_md5.c \
	$(srcdir)/des3_sha.c \
	$(srcdir)/des3_raw.c \
	$(srcdir)/raw_des.c 

LIB=crypto
LIBMAJOR=1
LIBMINOR=0
RELDIR=crypto
STLIBOBJS=cryptoconf.o encrypt_data.o decrypt_data.o \
	des_crc.o des_md5.o des3_sha.o des3_raw.o raw_des.o

STOBJLISTS=des/OBJS.ST md4/OBJS.ST md5/OBJS.ST sha/OBJS.ST crc32/OBJS.ST \
	os/OBJS.ST OBJS.ST

# No dependencies.  Record places to find this shared object if the target
# link editor and loader support it.
DEPLIBS=
SHLIB_LIBS=
SHLIB_LDFLAGS= $(LDFLAGS) @SHLIB_RPATH_DIRS@
SHLIB_LIBDIRS= @SHLIB_LIBDIRS@

# FIXME, need to build the library too...
all-unix:: all-liblinks
install-unix:: install-libs
all-windows:: $(OBJS)

libcrypto.lib:
	libdir crypto.lib

clean-unix:: clean-liblinks clean-libs clean-libobjs
clean-windows::
	$(RM) crypto.lib crypto.bak

all-windows::
	cd crc32
	@echo Making in crypto\crc32
	-$(MAKE) -$(MFLAGS)
	cd ..\des
	@echo Making in crypto\des
	-$(MAKE) -$(MFLAGS)
	cd ..\md4
	@echo Making in crypto\md4
	-$(MAKE) -$(MFLAGS)
	cd ..\os
	@echo Making in crypto\os
	-$(MAKE) -$(MFLAGS)
	rem BUG WITH NMAKE
	cd ..\md5
	@echo Making in crypto\md5
	-$(MAKE) -$(MFLAGS)
	cd ..\sha
	@echo Making in crypto\sha
	-$(MAKE) -$(MFLAGS)
	cd ..

clean-windows::
	cd crc32
	@echo Making clean in crypto\crc32
	-$(MAKE) -$(MFLAGS) clean
	cd ..\des
	@echo Making clean in crypto\des
	-$(MAKE) -$(MFLAGS) clean
	cd ..\md4
	@echo Making clean in crypto\md4
	-$(MAKE) -$(MFLAGS) clean
	cd ..\md5
	@echo Making clean in crypto\md5
	-$(MAKE) -$(MFLAGS) clean
	cd ..\sha
	@echo Making clean in crypto\sha
	-$(MAKE) -$(MFLAGS) clean
	cd ..\os
	@echo Making clean in crypto\os
	-$(MAKE) -$(MFLAGS) clean
	cd ..
	@echo Making clean locally

check-windows::
	cd crc32
	@echo Making check in crypto\crc32
	-$(MAKE) -$(MFLAGS) check
	cd ..\des
	@echo Making check in crypto\des
	-$(MAKE) -$(MFLAGS) check
	cd ..\md4
	@echo Making check in crypto\md4
	-$(MAKE) -$(MFLAGS) check
	cd ..\md5
	@echo Making check in crypto\md5
	-$(MAKE) -$(MFLAGS) check
	cd ..\sha
	@echo Making check in crypto\sha
	-$(MAKE) -$(MFLAGS) check
	cd ..\os
	@echo Making check in crypto\os
	-$(MAKE) -$(MFLAGS) check
	cd ..

