CFLAGS = $(CCOPTS) $(DEFS) -I. -I$(srcdir) -I../generic -I$(srcdir)/../generic -DUSE_AUTOCONF_H

##DOSBUILDTOP = ..\..\..
##DOSLIBNAME=..\gssapi.$(LIBEXT)

.c.o:
	$(CC) $(CFLAGS) -c $(srcdir)/$*.c
@SHARED_RULE@

all-unix:: shared $(OBJS)

all-mac:: shared $(OBJS)

all-windows:: $(OBJS)

shared:
	mkdir shared

ETSRCS= gssapi_err_krb5.c
ETOBJS= gssapi_err_krb5.$(OBJEXT)
ETHDRS= gssapi_err_krb5.h

gssapi_err_krb5.$(OBJEXT): gssapi_err_krb5.c
	$(CC) $(CFLAGS) -c $*.c
@SHARED_RULE_LOCAL@
##WIN16##	$(LIBCMD) $(PAGESIZE) /nologo $(LIBNAME) -+$@;
##WIN32##	$(LIBCMD) /out:$(LIBNAME) /nologo $@

gssapi_err_krb5.h: gssapi_err_krb5.et

gssapi_err_krb5.c: gssapi_err_krb5.et

SRCS = \
	$(srcdir)/accept_sec_context.c \
	$(srcdir)/acquire_cred.c \
	$(srcdir)/compare_name.c \
	$(srcdir)/context_time.c \
	$(srcdir)/delete_sec_context.c \
	$(srcdir)/disp_name.c \
	$(srcdir)/disp_status.c \
	$(srcdir)/export_sec_context.c \
	$(srcdir)/get_tkt_flags.c \
	$(srcdir)/gssapi_krb5.c \
	$(srcdir)/import_name.c \
	$(srcdir)/import_sec_context.c \
	$(srcdir)/indicate_mechs.c \
	$(srcdir)/init_sec_context.c \
	$(srcdir)/inq_context.c \
	$(srcdir)/inq_cred.c \
	$(srcdir)/inq_names.c \
	$(srcdir)/k5seal.c \
	$(srcdir)/k5unseal.c \
	$(srcdir)/krb5_gss_glue.c \
	$(srcdir)/process_context_token.c \
	$(srcdir)/rel_cred.c \
	$(srcdir)/rel_name.c \
	$(srcdir)/seal.c \
	$(srcdir)/ser_sctx.c \
	$(srcdir)/sign.c \
	$(srcdir)/unseal.c \
	$(srcdir)/util_cksum.c \
	$(srcdir)/util_crypt.c \
	$(srcdir)/util_seed.c \
	$(srcdir)/util_seqnum.c \
	$(srcdir)/verify.c \
	$(srcdir)/wrap_size_limit.c \
	gssapi_err_krb5.c

#	$(srcdir)/pname_to_uid.c \
#	$(srcdir)/k5mech.c \
#	$(srcdir)/rel_oid.c

OBJS = \
	accept_sec_context.$(OBJEXT) \
	acquire_cred.$(OBJEXT) \
	compare_name.$(OBJEXT) \
	context_time.$(OBJEXT) \
	delete_sec_context.$(OBJEXT) \
	disp_name.$(OBJEXT) \
	disp_status.$(OBJEXT) \
	export_sec_context.$(OBJEXT) \
	get_tkt_flags.$(OBJEXT) \
	gssapi_krb5.$(OBJEXT) \
	import_name.$(OBJEXT) \
	import_sec_context.$(OBJEXT) \
	indicate_mechs.$(OBJEXT) \
	init_sec_context.$(OBJEXT) \
	inq_context.$(OBJEXT) \
	inq_cred.$(OBJEXT) \
	inq_names.$(OBJEXT) \
	k5seal.$(OBJEXT) \
	k5unseal.$(OBJEXT) \
	krb5_gss_glue.$(OBJEXT) \
	process_context_token.$(OBJEXT) \
	rel_cred.$(OBJEXT) \
	rel_name.$(OBJEXT) \
	seal.$(OBJEXT) \
	ser_sctx.$(OBJEXT) \
	sign.$(OBJEXT) \
	unseal.$(OBJEXT) \
	util_cksum.$(OBJEXT) \
	util_crypt.$(OBJEXT) \
	util_seed.$(OBJEXT) \
	util_seqnum.$(OBJEXT) \
	verify.$(OBJEXT) \
	wrap_size_limit.$(OBJEXT) \
	gssapi_err_krb5.$(OBJEXT)

#	k5mech.$(OBJEXT) \
#	pname_to_uid.$(OBJEXT) \
#	rel_oid.$(OBJEXT)

HDRS= $(ETHDRS)

EHDRDIR=$(TOP)/include/gssapi
EXPORTED_HEADERS= gssapi_krb5.h

all-unix:: $(SRCS) $(HDRS) includes $(OBJS)
all-mac:: $(SRCS) $(HDRS) includes $(OBJS)
all-windows:: $(SRCS) $(HDRS) includes $(OBJS)
	if not exist $(EHDRDIR)\nul mkdir $(EHDRDIR)
	copy gssapi_krb5.h $(EHDRDIR)

clean-unix::
	$(RM) $(ETHDRS) $(ETSRCS) shared/*

clean-mac::
	$(RM) $(ETHDRS) $(ETSRCS) shared/*

clean-windows::
	$(RM) $(EHDRDIR)\gssapi_krb5.h
	if exist $(EHDRDIR)\nul rmdir $(EHDRDIR)

install::
	@set -x; for f in $(EXPORTED_HEADERS) ; \
	do $(INSTALL_DATA) $(srcdir)/$$f	\
		$(DESTDIR)$(KRB5_INCDIR)/gssapi/$$f ; \
	done

depend:: $(ETSRCS)

includes:: 

install::
