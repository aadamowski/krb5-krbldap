Wed Jul 10 16:22:14 1996  Marc Horowitz  <marc@mit.edu>

	* Makefile.in (clean-unix): remove the shared/ subdir

Tue Jul  9 17:55:30 1996  Marc Horowitz  <marc@mit.edu>

	* configure.in, Makefile.in: added rules and macros to do shared
 	library creation

Mon Jul  8 17:06:00 1996  Barry Jaspan  <bjaspan@mit.edu>

	* kdb_dbm.c: Create DB_OPENCLOSE, which opens and closes the
 	databases for each lock.  This is slower than the previous method,
 	but unlike the previous method it works.

Sun May 12 01:03:07 1996  Marc Horowitz  <marc@mit.edu>

	* kdb_xdr.c: reworked all of the krb5_dbe_* tl_data functions.
  	This was necessary so that the admin system could store it's own
 	tl_data, without needing code here.  This has the side-effect of
 	eliminating some structures which added no value, therefore
 	changing about a half-dozen files elsewhere in the tree.

	* kdb_cpw.c (add_key_rnd): handle kvno incrementing in the caller,
 	not here.
	(krb5_dbe_crk): increment the kvno here, not in add_key_rnd
	(krb5_dbe_ark): increment the kvno here, not in add_key_rnd
	(add_key_pwd): handle kvno incrementing in the caller, not here.
	(krb5_dbe_cpw): take an arg to specify the new kvno.  if it's
	<= the old kvno, just increment.  Otherwise, pass it to add_key_pwd.
	This is why all the code in this revision was changed.
	(krb5_dbe_apw): increment the kvno here, not in add_key_pwd

Thu Mar 21 20:38:38 1996  Richard Basch  <basch@lehman.com>

	* decrypt_key.c (krb5_dbekd_decrypt_key_data): bullet-proofing the
	code -- if the data contents are NULL, do not coredump.

Mon Mar 18 21:46:39 1996  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* configure.in: Add KRB5_RUN_FLAGS

	* Makefile.in: Use the run flags.

Sun Mar 17 20:55:41 1996  Ezra Peisach  <epeisach@dumpster.rose.brandeis.edu>

 	* configure.in: Change WITH_KDB_DB to USE_KDB5_LIBRARIES and add
		KRB5_LIBRARIES.

	* Makefile.in: Use libraries as specified by configure. Set
		LD_LIBRARY_PATH for tests.

Sun Mar  3 10:41:04 1996  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* configure.in: Change WITH_DB to WITH_KDB_DB

Fri Feb 23 19:39:52 1996  Mark Eichin  <eichin@cygnus.com>

	* keytab.c (krb5_ktkdb_close): new function, non-optional.
	(krb5_kt_kdb_ops): include _close method, comment what the other
	slots are.

Tue Feb 13 21:33:03 1996  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* kdb_dbm.c (krb5_dbm_db_rename): Initialize pointer before use
		for case where new db does not exist.

Tue Jan 30 18:26:38 1996  Mark Eichin  <eichin@cygnus.com>

	* kdb_dbm.c (krb5_dbm_db_rename): O_EXCL is meaningless without
	O_CREAT.

Sat Jan 27 01:01:17 1996  Mark Eichin  <eichin@cygnus.com>

	* t_kdb.c: wrap db_dbm decls and berkely_dispatch in ifdefs
	BERK_DB_DBM.
	(do_testing): wrap references as well.

	* keytab.c (krb5_ktkdb_get_entry): use KRB5_PROTOTYPE.

Wed Dec 13 09:28:33 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* keytab.c (krb5_ktkdb_resolve): Fix casting

	* t_kdb.c (add_principal): Remove mkvno

Wed Dec 13 07:09:30 1995  Chris Provenzano (proven@mit.edu)

	* Makefile.in, keytab.c : Move db keytab routines here.

Wed Dec 13 03:51:53 1995  Chris Provenzano (proven@mit.edu)

        * kdb_xdr.c : Remove mkvno for krb5_db_entry

Tue Dec 12 01:20:02 1995  Chris Provenzano (proven@mit.edu)

	* kdb_dbm.c : Move the krb5_db_context to include/krb5/kdb_dbc.h.
	* kdb_dbm.c krb5_dbm_db_set_mkey(), krb5_dbm_db_get_mkey():
		Functions for associating a master key (krb5_encrypt_block *)
		to a krb5_db_context. Currently it associates it to the
		krb5_context and will be fixed once the krb5_db_context
		is better defined (Post 1.0).

Thu Nov 09 17:05:57 1995  Chris Provenzano (proven@mit.edu)

        * fetch_mkey.c, kdb_cpw.c, t_kdb.c : 
		Remove krb5_enctype from krb5_string_to_key() args.

Tue Nov  7 16:35:03 1995  Theodore Y. Ts'o  <tytso@dcl>

	* kdb_xdr.c (krb5_dbe_search_enctype): Make a more general version
		of kdb5_dbe_find_enctype() which allows you to search the
		keylist looking for multiple keys that fit your criteria.
		Eventually we should convert all programs to use
		kdb5_dbe_search_enctype() instead of kdb5_dbe_find_enctype().

Fri Nov 03 04:49:58 1995  Chris Provenzano (proven@mit.edu)

	* decrypt_key.c (krb5_dbekd_decrypt_key_data()) : If key salt length
		is 0 then set keysalt->data.data to NULL.
	* kdb_cpw.c (add_key_rnd(), add_key_pwd()) : When creating new keys 
		for a new kvno and there are multiple enctypes that use a 
		common keytype, then set the enctype in the key to the first
		specified enctype and skip all other enctypes that use 
		the same keytype. (This assumes the salt type is the same too.)
		This way when the kdc needs to get the server key it doesn't
		need to gues what enctypes the server supports.
	* kdb_xdr.c (krb5_dbe_find_enctype()): Match keys that use common
		keytypes but different enctypes. Eg. ENCTYPE_DES_CBC_MD5
		matches ENCTYPE_DES_CBC_CRC and vice versa.
	* kdb_xdr.c krb5_dbe_find_enctype()): If kvno = 0 then determine
		maxkvno for all the keys and then search keys for a key that 
		matches enctype salttype and has kvno == maxkvno. This
		is different than when kvno = -1 which searches the keys
		for THE key with the greatest kvno which also matches enctype
		and salttype.
	* kdb_kdr.c (krb5_dbe_find_enctype()): If kvno = ktype = stype = -1
		then set kvno = 0. The first doesn't make a lot of sense.
	* kdb_xdr.c (krb5_dbe_encode_last_pwd_change(), 
		krb5_dbe_decode_last_pwd_change()) : Added.
	* kdb_xdr.c (krb5_decode_princ_contents()) : Don't try to allocate 
		space for keys if n_key_data = 0. 

Mon Sep 25 17:31:02 1995  Theodore Y. Ts'o  <tytso@dcl>

	* Makefile.in: Removed "foo:: foo-$(WHAT)" lines from the
	        Makefile.

Wed Sep 13 15:19:17 1995  Theodore Y. Ts'o  <tytso@dcl>

	* kdb_xdr.c (krb5_dbe_encode_mod_princ_data): Fix memory leaks.
		Fix lint flames.

	* fetch_mkey.c (krb5_db_fetch_mkey): This routine now sets the
		master encblock's crypto system using krb5_use_enctype()
		from the stored keytype of the master key.

	* decrypt_key.c (krb5_dbekd_decrypt_key_data): Remove the
		encryption type; the master_encblock should always be set
		correctly.

Sat Sep  9 14:53:39 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* decrypt_key.c (krb5_dbekd_decrypt_key_data): Set the encryption
		type before decrypting.

Fri Sep  8 19:52:34 1995  Ezra Peisach  (epeisach@dcl)

	* decrypt_key.c: Upon error, after freeing contents field, set to
		null to indicate to upper levels that it is really empty.

Wed Sep 06 14:20:57 1995   Chris Provenzano (proven@mit.edu)

        * decrypt_key.c, encrypt_key.c, fetch_mkey.c, kdb_compat.c,
	* kdb_cpw.c, kdb_xdr.c, store_mkey.c, t_kdb.c : 
		s/keytype/enctype/g, s/KEYTYPE/ENCTYPE/g

Tue Sep 05 22:10:34 1995   Chris Provenzano (proven@mit.edu)

        * decrypt_key.c, fetch_mkey.c, t_kdb.c : Remove krb5_enctype 
		references, and replace with krb5_keytype where appropriate

Tue Aug 29 13:34:23 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_dbm.c - Add routines to support serialization of the database
		context.  Clean up gcc -Wall complaints.

Thu Aug 24 18:54:51 1995  Theodore Y. Ts'o  <tytso@dcl>

	* .Sanitize: Update file list

Fri Aug 18 17:27:20 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_dbm.c - Bump timestamp to the future if we can't discriminate
		between updates within a second.  Fix database rename.  Reopen
		database after put or delete.
	* t_kdb.c - Add test code to fork off a few processes to beat on the
		database.


Thu Aug 17 13:46:29 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_dbm.c - Remove argument from dbm_db_end_update().  It was never
		used.  Remove gen_dbsuffix() logic from dbm_db_end_update() and
		dbm_db_get_age().  This logic was incorrect (end_update) or
		unused (get_age).  Reorg db_init() to reflect change in
		dbm_db_get_age().


Wed Aug 16 03:10:57 1995  Chris Provenzano  <proven@mit.edu>

	* decrypt_key.c, encrypt_key.c
		Only save the salt data if salt type != 0.
	* kdb_dbm.c :
		Rewritten to NOT open/close the db for every transaction.

Tue Aug 15 14:25:42 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_xdr.c - Add krb5_dbe_find_keytype() and clean up gcc -Wall
		complaints.


Wed Aug 9 17:17:36 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_cpw.c - Add check for uniqueness of key or key/salt combo.  Don't
		generate a new key_data entry if one already exists.  Also,
		fill in the key_data list at the end so as not to overwrite
		already present data.
		- Free krbtgt_keyblock contents in add_key_rnd().
		- Put a "break" at the end of the KRB5_KDB_SALTTYPE_ONLYREALM
		  in add_key_pwd().  Also pass in key_salt to encrypt_key_data
		  always.
	* kdb_xdr.c - initialize retval to 0 in decode_mod_princ data.  This is
		questionable whether we should return an error if there's no
		mod_princ data.  Also, free the allocated mod_princ only if
		we allocated it and there's a failure.


Wed Aug 9 09:47:08 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_cpw.c(add_key_rnd) - Terminate the variable length argument list
		to krb5_build_principal_ext() with a zero.

Tue Aug  8 21:32:30 1995  Tom Yu  <tlyu@dragons-lair.MIT.EDU>

	* kdb_cpw.c (add_key_rnd): remove bletcherous aggregate
		initializer stuff and use build_principal_ext like we
		should have in the first place to build the tgt principal.

Tue Aug 8 17:35:58 EDT 1995	Paul Park	(pjpark@mit.edu)
	* encrypt_key.c - When allocating the actual key_data_contents use the
		correct length (e.g. containing the two length bytes).
	* kdb_xdr.c - Clean the each key_data structure so that unfilled
		data becomes zero.


Mon Aug 7 17:40:10 EDT 1995	Paul Park	(pjpark@mit.edu)
	* encrypt_key.c - Handle keysalt specification with null data length.
	* decrypt_key.c - Handle salttypes with zero salt length.  Also, copy
		out stored salt.


Mon Aug 7 14:15:59 EDT 1995	Paul Park	(pjpark@mit.edu)
	* decrypt_key.c - Deserialize key length into a 16 bit integer, then
		jam it into the keyblock.


Mon Aug 7 13:05:53 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_cpw.c(add_key_rnd) - Manually initialize krbtgt_princ.data to
		point to krbtgt_princ_entries since some compilers do not
		support dynamic initializers.


Mon Aug 07 11:27:37 1995  Chris Provenzano (proven@mit.edu)

	* kdb_cpw.c: New routines for changing passwords of db_entried.

Fri Aug  4 23:26:22 1995  Tom Yu  <tlyu@dragons-lair.MIT.EDU>

	* setup_mkey.c (krb5_db_setup_mkey_name), 
	* fetch_mkey.c (krb5_db_fetch_mkey), 
	* verify_mky.c (krb5_db_verify_master_key),
	* decrypt_key.c (krb5_dbekd_decrypt_key_data),
	* encrypt_key.c (krb5_dbekd_encrypt_key_data),
	* kdb_xdr.c, kdb_dbm.c,
		Add parens to shut up gcc -Wall

Fri Aug 4 16:22:46 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_xdr,{de,en}crypt_key.c - Use encode/decode macros to [de]serialize
		data going in and out of the database.


Thu Aug 3 11:52:40 EDT 1995	Paul Park	(pjpark@mit.edu)
	* encrypt_key.c - Actually copy in the salt data which we allocated
		space for in krb5_dbekd_encrypt_key_data().
	* kdb_xdr.c - Correctly generate the tl_data list in krb5_decode_princ_
		contents().  Also allow for key_data_ver to be KRB5_KDB_V1_DATA_
		ARRAY.


Mon Jul 31 15:55:46 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_xdr.c - Correctly parenthesize realloc() expression in create_key
		_data().


Thu Jul 27 15:28:41 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdbint.h - Obsolete.

Thu Jul 27 02:59:05 1995  Chris Provenzano (proven@mit.edu)
        * decrypt_key.c, encrypt_key.c, kdb_dbm.c, kdb_xdr.c:
		Rewritten for new kdb format.
	* kdb_cpw.c : New password changing routines for new kdb format.
	* verify_mky.c, t_kdb.c : Use new kdb format.

Tue Jul 25 14:06:50 1995  Tom Yu  <tlyu@lothlorien.MIT.EDU>

	* kdb_dbm.c, t_kdb.c: Add prototype for dbm_error and dbm_clearerr
		in case they're not prototyped in the header files.

	* configure.in: Add test for missing prototypes for dbm_error and
		dbm_clearerr.

Thu Jul 20 23:59:18 1995  Mark Eichin  <eichin@cygnus.com>

	* kdb_dbm.c (krb5_dbm_db_create): move dirname, pagname
	declarations to the top of function, so it compiles...

Mon Jul 17 15:17:53 EDT 1995	Paul Park	(pjpark@mit.edu)
	* fetch_mkey.c - Remove inclusion of kdbint.h and add handling of
		stash file argument.
	* store_mkey.c - Remove inclusion of kdbint.h.  The default name of
		the stash file is in osconf.h now.

Sat Jul  8 22:37:14 1995  Theodore Y. Ts'o  (tytso@dcl)

	* kdb_dbm.c (kdb5_kdbm_db_create): Make sure the dbm context is
		initialized before we start.

Fri Jul 7 16:29:22 EDT 1995	Paul Park	(pjpark@mit.edu)
	* Makefile.in - Remove LDFLAGS, find com_err in TOPLIBD.


Fri Jun 30 14:39:45 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_dbm.c - Add function dispatch table to context and use it to
		perform database accesses.  Add kdb5_db_set_dbops() to set
		a context's function dispatch table.
	* Makefile.in - Remove Berkeley database object modules from this
		library.  They're now in libkrb5 since we use them in
		other places.
	* t_kdb.c - Add ability to test both DBM and Berkeley database
		format.

Thu Jun 29 06:54:00 1995  Mark Eichin  <eichin@cygnus.com>

	* configure.in (--with-dbm): new option, allows easy building of
	normal dbm support for compatibility.
	* Makefile.in (DBFLAGS): variable to hold substitution of flags to
	enable Berkeley db support.

Thu Jun 22 11:59:28 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_dbm.c - Replace static kdb context with context which is attached
		to krb5 context.  This allows for multiple open databases
		within the same process.


Thu Jun 15 18:04:58 EDT 1995	Paul Park	(pjpark@mit.edu)
	* Makefile.in - Remove explicit copying of archive library to library
		directory.  Add dependency on all-$(WHAT)
	* configure.in - Create symlink for archive when we build it.

Wed Jun 14 12:37:51 1995  Sam Hartman  <hartmans@tardis.MIT.EDU>

	* configure.in: Check for umask being defined.

	* store_mkey.c (krb5_db_store_mkey): Use HAVE_UMASK instead of
	unix as a preprocessor define for setting the umask.  AIX doesn't
	define unix.

	* t_kdb.c (main): Declare option as int, not char.  When char is
	unsigned, the comparison to EOF fails and it loops forever.


Sun Jun 11 09:26:48 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* Makefile.in (clean): Remove t_kdb and t_kdb.o

Fri Jun  9 19:26:49 1995    <tytso@rsx-11.mit.edu>

	* configure.in: Remove standardized set of autoconf macros, which
		are now handled by CONFIG_RULES.

Tue May 30 12:31:26 EDT 1995	Paul Park	(pjpark@mit.edu)
	* Makefile.in: ranlib the library again after doing $(LIBUPDATE).
		Some archivers don't do this.

Fri May 26 17:52:03 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kdb_dbm.c - Change usage of dbm package or Berkeley db package
		based on setting of BERK_DB_DBM.  Also, conditionalize
		implicit knowledge of dbm/Berkeley db filename extensions.
	* Makefile.in - Set BERK_DB_DBM when compiling.  Update from Berkeley
		db build directory.
	* configure.in - Check for random number generators.
	* t_kdb.c - New tester for kdb code.

Fri Mar 24 21:59:34 1995  Theodore Y. Ts'o  <tytso@dcl>

	* store_mkey.c (krb5_db_store_mkey): 
	* fetch_mkey.c (krb5_db_fetch_mkey): Hardcode the size of the
		keytype field in the file format, to be compatible with
		what was used in the Beta 4 release (before we changed the
		size of a krb5_keytype type).

Fri Mar 24 15:13:53 1995    <tytso@rsx-11.mit.edu>

	* kdb_dbm.c: Don't cast dbm_close() to void, because dbm_close is
		already void.

Tue Feb 28 00:30:10 1995  John Gilmore  (gnu at toad.com)

	* decrypt_key.c, encrypt_key.c, fetch_mkey.c, kdb_dbm.c,
	setup_mkey.c, store-mkey.c, verify_mky.c:  Avoid <krb5/...> includes.

Fri Jan 13 15:23:47 1995  Chris Provenzano (proven@mit.edu)

    * Added krb5_context to all krb5_routines

Thu Nov 17 19:22:16 1994  Mark Eichin  (eichin@cygnus.com)

	* kdb_dbm.c (krb5_dbm_db_unlock): Use krb5_lock_file.
	(krb5_dbm_db_lock): Same. (Changes from jtkohl@mit.edu.)

Thu Nov 10 17:20:42 1994  Theodore Y. Ts'o  (tytso@dcl)

	* decrypt_key.c (krb5_kdb_decrypt_key): Set the keyblock's magic
		number and ecryption type information appropriately.

Tue Nov  8 18:03:23 1994  Theodore Y. Ts'o  (tytso@dcl)

	* fetch_mkey.c (krb5_db_fetch_mkey): Set the keyblock's magic
		number and encryption type information appropriately.

Sat Oct 22 10:13:25 1994    (tytso@rsx-11)

	* kdb_dbm.c: Don't need to define POSIX_FILE_LOCKS; just include
		config.h instead.

Wed Oct 19 12:15:36 1994  Theodore Y. Ts'o  (tytso@dcl)

	* Makefile.in: make install obey $(DESTDIR) completely

Fri Oct 14 00:57:33 1994  Theodore Y. Ts'o  (tytso@dcl)

	* configure.in: Add test for unistd.h

	* lock_file.c: Use POSIX_FILE_LOCKS if _POSIX_VERSION is defined
		in unistd.h

Tue Oct  4 15:08:03 1994  Theodore Y. Ts'o  (tytso@dcl)

	* kdb_dbm.c (decode_princ_contents): Add backwards compatibility
		for version numbers 1.0 and 2.0.  

Mon Oct  3 22:47:49 1994  Theodore Y. Ts'o  (tytso@dcl)

	* kdb_dbm.c (decode_princ_contents): Force an incompatible version
		number change to the database --- we are now at database
		entry version 2.0.  Unfortunately, the way we encode the
		database is completely broken, and any structure changes
		change the encoding format.  We will need to redo this
		completely at some point, so we don't have to make people
		go through this again.

	* Makefile.in: make install obey $(DESTDIR)

Thu Aug  4 03:41:44 1994  Tom Yu  (tlyu@dragons-lair)

	* configure.in: look for install program

	* Makefile.in: make install fixes

Fri Jul 15 14:54:10 1994  Theodore Y. Ts'o  (tytso at tsx-11)

	* kdb_dbm.c (krb5_dbm_db_end_update): Change use of utimes() to
	the POSIX utime() function.


