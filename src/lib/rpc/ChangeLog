2003-03-24  Tom Yu  <tlyu@mit.edu>

	* xdr_mem.c (xdrmem_create): Perform some additional size checks.
	(xdrmem_getlong, xdrmem_putlong, xdrmem_getbytes): Check x_handy
	prior to decrementing it.

2002-08-12  Tom Yu  <tlyu@mit.edu>

	* xdr.c (xdr_string): Fix off-by-one error; we're not vulnerable,
	since we don't call it.

	* xdr_array.c (xdr_array): Account for elsize when checking
	encoded array count.

	[pullups from trunk]

2001-12-18  Ken Raeburn  <raeburn@mit.edu>

	* configure.in: Check for strerror.
	* clnt_perror.c (strerror) [!HAVE_STRERROR]: Define, with
	out-of-range check using sys_nerr.
	(sys_nerr) [!HAVE_STRERROR]: Declare at top level instead of in
	clnt_spcreateerror.
	(clnt_sperror, clnt_spcreateerror): Use strerror always.  Skip
	range check.

2000-06-21  Tom Yu  <tlyu@mit.edu>

	* svc_auth_gssapi.c (_svcauth_gssapi): Missed a rename.  From
	Nathan Neulinger.

2000-05-31  Ken Raeburn  <raeburn@mit.edu>

	* pmap_rmt.c (GIFCONF_BUFSIZE): New macro.
	(getbroadcastnets): Use it for buffer size.
	(clnt_broadcast): Make buffer at least that big.

	* get_myaddress.c (get_myaddress): Increase buffer size.

2000-05-18  Ken Raeburn  <raeburn@mit.edu>

	* auth_gssapi_misc.c (auth_gssapi_display_status_1): Don't pass a
	gss_buffer_desc to fprintf.

	* clnt_tcp.c (clnttcp_create): Initialize "ct".
	* clnt_udp.c (clntudp_bufcreate): Initialize "cu".

	* svc_auth_gssapi.c (_svcauth_gssapi, create_client,
	destroy_client, dump_db, clean_client): Use %p format for
	displaying pointers.  Remove unused variables.

2000-05-17  Ken Raeburn  <raeburn@mit.edu>
            Nalin Dahyabhai  <nalin@redhat.com>

	* clnt_perror.c (clnt_sperror): Don't overflow buffer "str" beyond
	known allocation size.
	* clnt_simple.c (gssrpc_callrpc): Don't overfill buffer "crp->oldhost".

2000-05-03  Nalin Dahyabhai  <nalin@redhat.com>

	* clnt_perror.c (_buf): Use bigger buffer.
	(clnt_spcreateerror): Don't overflow buffer "buf" beyond known
	allocation size.

2000-02-22  Donn Cave  <donn@u.washington.edu>

	* Makefile.in (includes): Extract basename of header file to be
	installed, since Digital UNIX 4.0 native make substitutes the
	VPATH-derived pathname here.

2000-02-17  Tom Yu  <tlyu@mit.edu>

	* svc_auth_gssapi.c (_svcauth_gssapi): Don't explicitly free
	call_arg on error, since svc_getargs should do that now.

	* svc_udp.c (svcudp_getargs): Free args on xdr decode error to
	avoid leaks.

	* svc_tcp.c (svctcp_getargs): Free args on xdr decode error to
	avoid leaks.

	* svc_raw.c (svcraw_getargs): Free args on xdr decode error to
	avoid leaks.

	* auth_gssapi.c (auth_gssapi_create): Don't explicitly free
	call_res anymore, since clnt_call should deal now.

	* clnt_udp.c (clntudp_call): Free stuff on error from
	xdr_replymsg() to prevent leaking.

	* clnt_tcp.c (clnttcp_call): Free stuff on error from
	xdr_replymsg() to avoid leaking.

	* clnt_raw.c (clntraw_call): Free stuff on error from
	xdr_replymsg() to avoid leaking.

2000-02-16  Tom Yu  <tlyu@mit.edu>

	* auth_gssapi.c (auth_gssapi_create): Free call_res because
	xdr_authgssapi_init_res can potentially allocate memory.  Perhaps
	clnt_call should really deal with this, though.  It is not at all
	clear whether clnt_call or svc_getargs should actually end up
	freeing allocated memory themselves.

2000-02-15  Tom Yu  <tlyu@mit.edu>

	* svc_auth_gssapi.c (_svcauth_gssapi): Call gssrpc_xdr_free() if
	xdr_authgssapi_creds() or xdr_authgssapi_init_arg() fails.

	* auth_gssapi_misc.c (xdr_authgssapi_creds):
	(xdr_authgssapi_init_arg):
	(xdr_authgssapi_init_res): Revert prior change.  The caller should
	be the one dealing.  Additionally, it was probably wrong to
	unconditionally free the object regardless of whether the mode is
	XDR_DECODE.
	(auth_gssapi_unwrap_data): Use temp_xdrs rather than in_xdrs to
	force XDR_FREE operation.

2000-02-14  Tom Yu  <tlyu@mit.edu>

	* svc.c (xprt_register): Zero out xports after allocating.

	* auth_gssapi_misc.c (xdr_authgssapi_creds):
	(xdr_authgssapi_init_arg): 
	(xdr_authgssapi_init_res): 
	(auth_gssapi_unwrap_data): If xdr_gss_buf or xdr_bytes fails, call
	again with XDR_FREE set so that allocated memory doesn't leak.

2000-01-24  Tom Yu  <tlyu@mit.edu>

	* get_myaddress.c (gssrpc_get_myaddress): Copy in from NetBSD;
	use loopback address only.

1999-10-26  Tom Yu  <tlyu@mit.edu>

	* Makefile.in: Clean up usage of CFLAGS, CPPFLAGS, DEFS, DEFINES,
	LOCAL_INCLUDES such that one can override CFLAGS from the command
	line without losing CPP search patchs and defines. Some associated
	Makefile cleanup. [from wsanchez@apple.com]

Fri Apr 23 20:05:38 1999  Tom Yu  <tlyu@mit.edu>

	* svc.c: Fix to reference the correct xprt because we're no longer
	calling ffs(); also remove some unused variables.

Wed Apr 21 16:22:32 1999  Tom Yu  <tlyu@mit.edu>

	* svc.c (xprt_unregister): Fix typo.

1999-04-14    <tytso@rsts-11.mit.edu>

	* svc.c (svc_getreq, svc_getreqset): Avoid using internal, private
		fd_set structure elements (Needed for Linux/glibc 2.1)

Thu Apr  1 19:11:50 1999  Tom Yu  <tlyu@mit.edu>

	* rpc_commondata.c: Add initializers to prevent lossage on systems
	that don't deal with common blocks in libraries.

1998-11-13  Theodore Ts'o  <tytso@rsts-11.mit.edu>

	* Makefile.in: Set the myfulldir and mydir variables (which are
		relative to buildtop and thisconfigdir, respectively.)

1998-10-27  Marc Horowitz  <marc@mit.edu>

	* svc_auth_gssapi.c, auth_gssapi.h: fix the set_name prototype,
	add a new unset_names function

Sun Jul 26 18:13:39 1998  Sam Hartman  <hartmans@utwig.mesas.com>

	* Makefile.in (LIBMAJOR): bump libmajor

Wed Apr 15 18:07:38 1998  Tom Yu  <tlyu@mit.edu>

	* Makefile.in (SHLIB_EXPDEPS): 
	(SHLIB_EXPLIBS): Rename libcrypto -> libk5crypto.

Mon Apr  6 19:44:51 1998  Tom Yu  <tlyu@voltage-multiplier.mit.edu>

	* Makefile.in (includes): Don't mkdir unless the directory doesn't
 	exist yet.

Wed Feb 18 16:26:19 1998  Tom Yu  <tlyu@mit.edu>

	* Makefile.in: Remove trailing slash from thisconfigdir.  Fix up
	BUILDTOP for new conventions.

Fri Feb 13 20:57:49 1998  Tom Yu  <tlyu@mit.edu>

	* auth.h: Renames.
	* auth_any.c: Update header locations.
	* auth_gssapi.c: Punt naughty RCS keywords.  Update header
	locations.  Remove explicit extern decl of rpc_createrr (clnt.h
	gets it).  Renames.
	* auth_gssapi.h: Punt naughty RCS keywords.
	* auth_gssapi_misc.c: Punt naught RCS keywords.  Update header
	locations.
	* auth_none.c: Update header locations.  Renames.
	* auth_unix.c: Update header locations.  Renames.
	* auth_unix.h: Renames.
	* authunix_prot.c: Update header locations.
	* bindresvport.c: Renames.
	* clnt.h: Renames.
	* clnt_generic.c: Update header locations.
	* clnt_perror.c: Update header locations.
	* clnt_raw.c: Update header locations.  Renames.
	* clnt_simple.c: Update header locations.  Renames.
	* clnt_tcp.c: Update header locations.  Renames.
	* clnt_udp.c: Upate header loations.  Renames.
	* get_myaddress.c: Update header locations.  Renames.
	* getrpcent.c: Update header locations.
	* getrpcport.c: Update header locations. Renames.
	* netdb.h: Update header locations.
	* pmap_clnt.c: Update header locations.  Renames.
	* pmap_clnt.h: Renames.
	* pmap_getmaps.c: Update header locations.
	* pmap_getport.c: Update header locations.
	* pmap_prot.c: Update header locations.
	* pmap_prot.h: Renames.
	* pmap_prot2.c: Update header locations.
	* pmap_rmt.c: Update header locations.  Renames.
	* pmap_rmt.h: Renames.
	* rpc.h: Update header locations.  No longer include rpc/netdb.h.
	* rpc_callmsg.c: Update header locations.  Renames.
	* rpc_commondata.c: Update header locations.
	* rpc_dtablesize.c: Renames.
	* rpc_msg.h: Renames.
	* rpc_prot.c: Update header locations.  Renames.
	* svc.c: Update header locations.  Renames.
	* svc.h: Renames.
	* svc_auth.c: Update header locations.  Renames.
	* svc_auth.h: Renames.
	* svc_auth_any.c: Update header locations.
	* svc_auth_gssapi.c: Punt naughty RCS keywords.  Update header
	locations.  Renames.
	* svc_auth_unix.c: Renames.
	* svc_raw.c: Update header locations.
	* svc_run.c: Update header locations.  Renames.
	* svc_simple.c: Update header locations.  Renames.  Make pl
	static.
	* svc_tcp.c: Update header locations.  Renames.
	* svc_udp.c: Update header locations.  Renames.
	* xdr.c: Update header locations.  Renames.
	* xdr.h: Renames.
	* xdr_alloc.c: Punt naughty RCS keywords.  Update header
	locations.
	* xdr_array.c: Update header locations.
	* xdr_float.c: Update header locations.
	* xdr_mem.c: Update header locations.
	* xdr_rec.c: Update header locations.
	* xdr_reference.c: Update header locations.
	* xdr_stdio.c: Update header locations.

	* Makefile.in: Bump major version due to changes.  Don't build
	getrpcent.o, since we don't use it, and dealing with the
	rpc/netdb.h lossage was a major pain.  Also, rename HDRDIR to
	$(BUILDTOP)/gssrpc in order to avoid problems with system headers
	including rpc/*.h.

Thu Feb 12 16:18:22 1998  Tom Yu  <tlyu@mit.edu>

	* configure.in: Add commented out AC_OUTPUT to force autoreconf to
	rebuild the configure script.

Mon Feb  2 17:00:16 1998  Theodore Ts'o  <tytso@rsts-11.mit.edu>

	* Makefile.in: Define BUILDTOP and thisconfigdir in the Makefile

	* configure.in, Makefile.in: Remove CopySrcHeader and CopyHeader 
		from configure.in and move equivalent functionality to
		Makefile.in 

Wed Jan 21 15:06:00 1998  Ezra Peisach  <epeisach@mit.edu>

	* bindresvport.c: Include string.h for memset prototype.

Tue Dec 16 11:22:13 1997  Ezra Peisach  <epeisach@mit.edu>

	* svc_auth_gssapi.c (_svcauth_gssapi): When looping over services,
		free previous output_tokens.

Fri Nov 21 00:37:14 1997  Ezra Peisach  <epeisach@mit.edu>

	* Makefile.in (types.h): Add rules to generate file by running
 	config.status. Remove on make clean.

Tue Oct 21 14:31:33 1997  Ezra Peisach  <epeisach@mit.edu>

	* svc_auth_gssapi.c (destroy_client): Fix to not lose entries in
        the chain linked list.

Mon Aug 18 09:48:06 1997  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* get_myaddress.c: Include string.h for memcpy prototype.

Sat Feb 22 01:34:19 1997  Sam Hartman  <hartmans@tertius.mit.edu>

	* Makefile.in (SHLIB_EXPDEPS): s/.so/$(SHLIBEXT)

Mon Feb 10 11:10:02 1997  Ezra Peisach  <epeisach@quest.rose.brandeis.edu>

	* configure.in: Check for sys/uio.h.

	* svc_udp.c: Include sys/uio.h is available for struct iovec.

Mon Feb 10 00:04:36 1997  Tom Yu  <tlyu@mit.edu>

	* svc_udp.c (svcudp_recv): Avoid coredumps under Solaris (and
	possibly other systems) by passing in a non-NULL iovec to
	recvmsg().

Thu Jan 16 19:02:22 1997  Tom Yu  <tlyu@mit.edu>

	* Makefile.in (all-prerecurse): Update to use double-colon rules.

Tue Jan 14 19:22:42 1997  Tom Yu  <tlyu@mit.edu>

	* Makefile.in:
	* configure.in: Update to new library build procedure.

Wed Dec  4 12:42:49 1996  Barry Jaspan  <bjaspan@mit.edu>

	* Various changes to allow channel bindings to work with both UDP
 	and TCP cleanly [krb5-libs/180]:

	* auth_gssapi.c: remove the special-case exception to channel
 	bindings failure added in the previous revision, since we now
 	solve the problem by making channel bindings not fail

	* clnt_udp.c: use a connected socket so that the client can
 	determine its own source address with getsockname

	* svc.h: add xp_laddr and xp_laddrlen fields to SVCXPRT structure

	* svc_tcp.c: set xp_laddr and xp_laddrlen when a connection is
 	established

	* svc_udp.c (svcudp_recv): use recvmsg with MSG_PEEK followed by
 	recvfrom in order to determine both source and dest address on
 	unconnected UDP socket, set xp_laddr and xp_laddrlen

Fri Nov 22 15:50:42 1996  unknown  <bjaspan@mit.edu>

	* get_myaddress.c (get_myaddress): use krb5_os_localaddr instead
 	of ioctl() to get local IP addresses [krb5-libs/227]

	* clnt_generic.c, clnt_simple.c, getrpcport.c: use sizeof instead
 	of h_length to determine number of bytes of addr to copy from DNS
 	response [krb5-misc/211]

Fri Nov 22 11:49:43 1996  Sam Hartman  <hartmans@mit.edu>

	* types.hin: Include stdlib.h if found at config time [203]

	* configure.in: Substitute STDLIB_INCLUDE into types.h. [203]

Tue Nov 12 16:27:27 1996  Barry Jaspan  <bjaspan@mit.edu>

	* auth_gssapi.c (auth_gssapi_create): handle channel bindings
 	failure so UDP connections can work [krb5-libs/180]

Tue Nov  5 18:43:46 1996  Tom Yu  <tlyu@mit.edu>

	* configure.in: Revert removal of CopySrcHeader, etc., for now.

	* Makefile.in (OBJS): Remove dependency of $(OBJS) on shared, also
	remove dependency of $(HDRS) on $(HDRDIR).  Both of these to avoid
	unecessary copying.

Wed Oct 30 13:18:34 1996  Barry Jaspan  <bjaspan@mit.edu>

	* xdr_stdio.c: Remove the #ifndef mc68000 cruft.  I'm not sure
 	what it was supposed to accomplish, but in both places it appeared
 	it was unquestionably wrong.  I suspect that the ifdef was put in
 	originally to optimize byte-alignment code that wasn't necessary
 	on the 68000.  Who knows?  Someone will complain if this isn't
 	right. [krb5-libs/47]
  
Tue Oct 29 13:03:50 1996  Barry Jaspan  <bjaspan@mit.edu>

	* auth_gssapi.c (auth_gssapi_create): #ifdef GSSAPI_KRB5, a null
 	mech_type implies gss_mech_krb5, so include that in the version 3
 	fallback test.  This change, along with the other changes for rpc
 	version 4, complete the fix for [krb5-libs/106].

Wed Oct 23 00:08:27 1996  Theodore Y. Ts'o  <tytso@mit.edu>

	* pmap_rmt.c:
	* clnt_udp.c: Change #ifdef sparc to #ifdef sun for more portability.
		[fixes PR#123]

Mon Oct 21 21:22:42 1996  Tom Yu  <tlyu@mit.edu>

	* Makefile.in, configure.in: Fixes to work with new directory
 	recursion method.

Wed Oct 16 16:12:07 1996  Barry Jaspan  <bjaspan@mit.edu>

	* svc_auth_gssapi.c (_svcauth_gssapi): accept add call_arg version
 	4

Tue Oct 15 17:04:09 1996  Barry Jaspan  <bjaspan@mit.edu>

	* Makefile.in (CFLAGS): compile with -DGSSAPI_KRB5

	* svc_auth_gssapi.c: add #ifdef GSSAPI_KRB5 for krb5 specific code

	* auth_gssapi.c (auth_gssapi_create): add call_arg version 4, make
 	version 3 use using gss_mech_krb5_old (under #ifdef GSSAPI_KRB5)

	* configure.in: add DO_SUBDIRS so make will descend into unit-test

Wed Oct  9 14:15:34 1996  Tom Yu  <tlyu@mit.edu>

	* Makefile.in (all-unix): Force $(OBJS) to depend on includes,
	fixing incompatibilty with makes that don't evaluate dependencies
	l-r.

Tue Sep  3 23:10:58 1996  Theodore Y. Ts'o  <tytso@mit.edu>

	* auth_gssapi.c: Remove $LOG$, including "unprofessional" comment
		which OV requested that we lose....

Sat Aug 31 01:46:45 1996  Ken Raeburn  <raeburn@cygnus.com>

	* pmap_rmt.c (getbroadcastnets): Tweak conditional layout to make
	emacs indentation code happier.

	* netdb.h: Comment fix.

	Tue Aug  6 18:52:47 1996  Marc Horowitz  <marc@mit.edu>

	* configure.in, getrpcent.c: Use configure to the return types of
	setrpcent() and getrpcent().  Also, check for struct rpcent in the
	system <netdb.h>, and only define the structure in rpc/netdb.h if
	it's not in the system file.

Tue Aug 13 15:18:16 1996  Tom Yu  <tlyu@mit.edu>

	* getrpcent.c: Add PROTOTYPE and conditionalize function
		prototypes.

	* xdr.h: Add PROTOTYPE and conditionalize function prototypes.

	* svc_auth_gssapi.c: Remove ANSI string concatenation, de-ANSI-fy
 		function definitions.

	* auth_gssapi_misc.c (auth_gssapi_display_status_1): Remove ANSI
		string concatenation, de-ANSI-fy function definitions.

	* auth_gssapi.h: Add PROTOTYPE and conditionalize function
		prototypes.

	* auth_gssapi.c (auth_gssapi_create): remove ANSI-ish string
		concatenation, de-ANSI-fy function definitions.

Thu Aug  8 15:30:01 1996  Tom Yu  <tlyu@voltage-multiplier.mit.edu>

	* configure.in, types.hin: Change search for struct rpcent yet
		again, this time compile-checking both netdb.h and
		rpc/netdb.h and taking action appropriately.  See the
		comments in configure.in for details.

Mon Aug  5 16:46:48 1996  Tom Yu  <tlyu@voltage-multiplier.mit.edu>

	* Makefile.in (CFLAGS): Change DEBUG_GSSAPI to 0 to avoid printing
		excess stuff to stderr.

Wed Jul 31 20:36:34 1996  Tom Yu  <tlyu@voltage-multiplier.mit.edu>

	* getrpcent.c: Shuffle inclusion order somewhat.

	* configure.in: Fix test for STRUCT_RPCENT_ALREADY_PROVIDED if
		there happens to be a /usr/include/rpc/netdb.h.  This
		causes /usr/include/netdb.h to include netdb.h from our
		tree rather from /usr/include/rpc, which of course results
		in massive damage.  Basically, if /usr/include/netdb.h
		contains rpcent declaration and /usr/include/rpc/netdb.h
		exists, then assume that there is no struct rpcent in the
		system include files.  It's really unfortunate that we
		need to do this at all, but it's all we can do short of
		renaming a bunch of include files or directories.

	* Makefile.in: Punt -I$(srcdir)/..; it was gross and not needed
		because headers get installed in build tree before
		building the library anyway.

Wed Jul 31 16:54:29 1996  Tom Yu  <tlyu@mit.edu>

	* types.hin: Remove #include <netdb.h> because it appears the only
		reason for doing so was to get struct rpcent, and we're
		getting that via <rpc/netdb.h>.

	* clnt_generic.c, clnt_simple.c, clnt_tcp.c, clnt_udp.c,
 		getrpcent.c, getrpcport.c, pmap_getmaps.c, svc_simple.c:
		Revert prior change due to netdb.h shuffling.

Tue Jul 30 18:59:17 1996  Tom Yu  <tlyu@mit.edu>

	* rpc.h: Don't include netdb.h (rpc/types.h already includes it)

	* svc_auth_gssapi.c: #include <rpc/rpc.h> before <sys/stat.h> (to
		get sys/types.h.

	* clnt_generic.c, clnt_simple.c, clnt_tcp.c, clnt_udp.c,
 		getrpcent.c, getrpcport.c, pmap_getmaps.c, svc_simple.c:
 		Remove #include <netdb.h>; it's already included in
 		rpc/types.h.

Mon Jul 29 22:02:47 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* configure.in: Determine whether netdb.h defines struct rpcent.

	* types.hin: Expand rpcent_define to be a null string or a #define
        on Linux.

	* netdb.h: Include rpc/types.h and only define struct rpcent if
        needed.

Wed Jul 24 07:58:38 1996  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* pmap_rmt.c (clnt_broadcast): Use memset insetad of bzero.

	* Makefile.in (DEPLIBS): Use correct version number for
		gssapi_krb5 dependency. 

Tue Jul 23 23:49:47 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* clnt_perror.c: Don't declare strcpy.

Tue Jul 23 11:24:32 1996  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* xdr.c: Do not declare malloc().

	* Makefile.in (SHLIB_LIBS): Link with gssapi_krb5 when creating
		shared library.


Mon Jul 22 21:46:48 1996  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* clnt_perror.c: Include errno.h.

Fri Jul 12 15:33:50 1996  Marc Horowitz  <marc@mit.edu>

	* rpc_dtablesize.c (_rpc_dtablesize): put in a few checks to make
 	sure that the return value is never larger than FD_SETSIZE, since
 	this function's purpose is to be used as the first arg to
 	select().

Tue Jul  9 17:56:54 1996  Marc Horowitz  <marc@mit.edu>

	* rpc.h, netdb.h, getrpcent.c: Our build can (and will) require
 	that the rpc header files shipped with kerberos be used if the
 	library shipped with kerberos is used.  Thus, some simplifying
 	assumptions can be made, mostly having to do with the declaration
 	of struct rpcent and the related functions.
	* clnt_perror.c: made usage of sys_errlist conditional on
 	NEED_SYS_ERRLIST
	* configure.in (DECLARE_SYS_ERRLIST): added
 	* Makefile.in (DONE): added a few rules and variable so shared
 	library creation would work

