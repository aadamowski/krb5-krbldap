#
# $Id$
#

set timeout 10

load_lib "helpers.exp"

if {[regexp {(.*/)?([^/]*)} $KEYTAB dummy dir progname] == 0} {
	error "cannot set progname from $KEYTAB"
}

set ktscratch_file /tmp/keytab_test
set ktscratch WRFILE:$ktscratch_file
set ktarg "-k $ktscratch"

# Get the kvnos we will need later
setup_keytab "setup" $ktscratch admin admin { kttest1 kttest2 }
set kvno1 [exec $klist -k -K FILE:$ktscratch_file | \
		awk "/kttest1/ {print \$1}"]
set kvno2 [exec $klist -k -K FILE:$ktscratch_file | \
		awk "/kttest2/ {print \$1}"]

setup_keytab "R1" $ktscratch admin admin { kttest1 }
set kvno1 [expr $kvno1+1]
keytab_run "R1" "$ktarg -r kttest1" 0 {
	-re 
	"$progname: Entry for principal kttest1 with kvno \[0-9\]+\
	removed from keytab $ktscratch" {}
}
klist_check "R1" $ktscratch

setup_keytab "R2" $ktscratch admin admin { kttest1 }
set kvno1 [expr $kvno1+1]
keytab_run "R2" "$ktarg -q -r kttest1" 0 {
	-re 
	"$progname: Entry for principal kttest1 with kvno \[0-9\]+\
	removed from keytab $ktscratch" { close; fail "R2: -q"; return }
	eof { break }
}
klist_check "R2" $ktscratch

setup_keytab "R3" $ktscratch admin admin { kttest1 }
set kvno1 [expr $kvno1+1]
klist_check "R3" $ktscratch "kttest1 $kvno1"
keytab_run "R3" "$ktarg -r kttest1 $kvno1" 0
klist_check "R3" $ktscratch

setup_keytab "R4" $ktscratch admin admin { kttest1 kttest1 kttest1 }
set kvno1 [expr $kvno1+3]
klist_check "R4" $ktscratch "kttest1 [expr $kvno1-2]" \
	"kttest1 [expr $kvno1-1]" "kttest1 $kvno1"
keytab_run "R4" "$ktarg -r kttest1" 0
klist_check "R4" $ktscratch "kttest1 [expr $kvno1-2]" \
	"kttest1 [expr $kvno1-1]"

setup_keytab "R5" $ktscratch admin admin { kttest1 kttest1 kttest1 }
set kvno1 [expr $kvno1+3]
keytab_run "R5" "$ktarg -r kttest1 old" 0
klist_check "R5" $ktscratch "kttest1 $kvno1"

setup_keytab "R6" $ktscratch admin admin { kttest1 kttest1 kttest1 }
set kvno1 [expr $kvno1+3]
keytab_run "R6" "$ktarg -r kttest1 old" 0
klist_check "R6" $ktscratch "kttest1 $kvno1"

setup_keytab "R7" $ktscratch admin admin { kttest1 kttest1 kttest1 }
set kvno1 [expr $kvno1+3]
keytab_run "R7" "$ktarg -r kttest1 all" 0 {
	"$progname: Entry for principal kttest1" {} 
} {
	"$progname: Entry for principal kttest1" {}
} {
	"$progname: Entry for principal kttest1" {}
}
klist_check "R7" $ktscratch

setup_keytab "R8" $ktscratch admin admin { kttest1 }
set kvno1 [expr $kvno1+1]
keytab_run "R8" "$ktarg -r kttest2" 1 {
	"$progname: No entry for principal kttest2 exists in keytab" {}
}
klist_check "R8" $ktscratch "kttest1 $kvno1"

setup_keytab "R9" $ktscratch admin admin { kttest1 }
set kvno1 [expr $kvno1+1]
keytab_run "R9" "$ktarg -r kttest2 1" 1 {
   "$progname: No entry for principal kttest2 with kvno 1 exists in keytab" {}
}
klist_check "R9" $ktscratch "kttest1 $kvno1"

setup_keytab "R10" $ktscratch admin admin { kttest1 }
set kvno1 [expr $kvno1+1]
keytab_run "R10" "$ktarg -r kttest2 all" 1 {
	"$progname: No entry for principal kttest2 exists in keytab" {}
}
klist_check "R10" $ktscratch "kttest1 $kvno1"

setup_keytab "R11" $ktscratch admin admin { kttest1 }
set kvno1 [expr $kvno1+1]
keytab_run "R11" "$ktarg -r kttest1 old" 1 {
	"$progname: There is only one entry for principal kttest1 in keytab" {}
}
klist_check "R11" $ktscratch "kttest1 $kvno1"

setup_keytab "R13" $ktscratch admin admin { kttest1 kttest2 kttest1 }
set kvno1 [expr $kvno1+2]
set kvno2 [expr $kvno2+1]
keytab_run "R13" "$ktarg -r kttest2 $kvno2" 0
klist_check "R13" $ktscratch "kttest1 [expr $kvno1-1]" "kttest1 $kvno1"

setup_keytab "R14" $ktscratch admin admin { kttest1 kttest2 kttest1 kttest2 }
set kvno1 [expr $kvno1+2]
set kvno2 [expr $kvno2+2]
keytab_run "R14" "$ktarg -r kttest1 all" 0
klist_check "R14" $ktscratch "kttest2 [expr $kvno2-1]" "kttest2 $kvno2"

setup_keytab "R15" $ktscratch admin admin { kttest1 kttest2 kttest1 kttest2 }
set kvno1 [expr $kvno1+2]
set kvno2 [expr $kvno2+2]
keytab_run "R15" "$ktarg -r kttest1 old" 0
klist_check "R15" $ktscratch "kttest2 [expr $kvno2-1]" \
	"kttest1 $kvno1" "kttest2 $kvno2"

exec rm -f $ktscratch_file
