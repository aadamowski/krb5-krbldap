# config/post.in
# put all:: first just in case no other rules occur here
#
all::

check::
check-windows::

.depend: $(SRCS) $(SRCTOP)/util/depfix.sed
	if test -n "$(SRCS)" ; then \
		$(CC) -M $(CFLAGS) $(SRCS) | \
			sed -f $(SRCTOP)/util/depfix.sed | \
			sed -e 's; $(SRCTOP)/; $$(SRCTOP)/;g' | \
			sed -e 's; $(srcdir)/; $$(srcdir)/;g' | \
			sed -e 's; $(BUILDTOP)/; $$(BUILDTOP)/;g' | \
			sed -e 's; \./; ;g' > .depend; \
	else :; fi

depend:: .depend
	if test -n "$(SRCS)" ; then \
		sed -e '/^# +++ Dependency line eater +++/,$$d' \
			< $(srcdir)/Makefile.in | cat - .depend \
			> $(srcdir)/Makefile.in.new; \
	$(MV) $(srcdir)/Makefile.in $(srcdir)/Makefile.in.old; \
	$(MV) $(srcdir)/Makefile.in.new $(srcdir)/Makefile.in; \
	else :; fi

clean:: clean-$(WHAT)
	$(RM) config.log pre.out post.out Makefile.out

clean-unix::
	if test -n "$(OBJS)" ; then $(RM) $(OBJS); else :; fi
	$(RM) .depend

clean-windows::
	$(RM) *.$(OBJEXT)
	$(RM) msvc.pdb *.err

Makefiles: Makefile Makefiles-recurse

Makefile: $(srcdir)/Makefile.in $(thisconfigdir)/config.status \
		$(SRCTOP)/config/pre.in $(SRCTOP)/config/post.in
	cd $(thisconfigdir) && $(SHELL) config.status
$(top_srcdir)/config.status: $(top_srcdir)/configure
	cd $(top_srcdir) && $(SHELL) config.status --recheck
#$(srcdir)/$(thisconfigdir)/configure: $(srcdir)/$(thisconfigdir)/configure.in \
#		$(SRCTOP)/aclocal.m4
#	cd $(srcdir)/$(thisconfigdir) && \
#		$(SHELL) $(SRCTOP)/util/autoconf/autoconf \
#			--localdir=$(BUILDTOP) \
#			--macrodir=$(BUILDTOP)/util/autoconf

#These don't work well with some versions of GNU make.
#all-unix clean-unix install-unix check-unix Makefiles::
#	@case "`echo '$(MAKEFLAGS)'|sed -e 's/ --.*$$//'`" in \
#		*[ik]*) e=:;; *) e="exit 1";; esac;

all-recurse clean-recurse install-recurse check-recurse Makefiles:
	@e="exit 1"; \
	for i in $(SUBDIRS) ; do \
		if test -d $$i ; then \
			target=`echo $@|sed s/-recurse//`; \
			echo "making $$target in $(CURRENT_DIR)$$i..."; \
			if (cd $$i ; $(MAKE) CC="$(CC)" CCOPTS="$(CCOPTS)" \
			    CURRENT_DIR=$(CURRENT_DIR)$$i/ $$target) then :; \
			else $$e; fi; \
		else \
			echo "Skipping missing directory $(CURRENT_DIR)$$i" ; \
		fi \
	done
