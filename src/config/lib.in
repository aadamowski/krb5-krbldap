### config/lib.in
#
# Makefile fragment that creates static, shared, and profiled libraries.
#
# The following variables must be set in the Makefile.in:
#
# LIB		library name without "lib" or extension
# LIBMAJOR	library major version
# LIBMINOR	library minor version
# STOBJLISTS	list of files, each of which is an OBJS.ST created by
#			libobj.in; each filename must have a directory;
#			i.e. ./OBJS.ST for the current directory
# RELDIR	path to this directory relative to $(TOPLIBD)

LN_S=@LN_S@

# Set to "lib$(LIB)$(STEXT) lib$(LIB)$(SHEXT) lib$(LIB)$(PFEXT)" or
# some subset thereof by configure; determines which types of libs get
# built.
LIBLIST=@LIBLIST@

# Set by configure; list of library symlinks to make to $(TOPLIBD)
LIBLINKS=@LIBLINKS@

# Some of these should really move to pre.in, since programs will need
# it too. (e.g. stuff that has dependencies on the libraries)

# usually .a
STLIBEXT=@STLIBEXT@

# usually .so.$(LIBMAJOR).$(LIBMINOR)
SHLIBVEXT=@SHLIBVEXT@

# usually .so
SHLIBEXT=@SHLIBEXT@

# usually _p.a
PFLIBEXT=@PFLIBEXT@

# "cc -G", "ld -Bshareable", etc.
LDCOMBINE=@LDCOMBINE@

# "-h lib$(LIB).$(LIBMAJOR)", "-Wl,-h -Wl,lib$(LIB).$(LIBMAJOR)", etc.
SONAMEFLAG=@SONAMEFLAG@

# STOBJLISTS=dir1/OBJS.ST dir2/OBJS.ST etc...
SHOBJLISTS=$(STOBJLISTS:.ST=.SH)
PFOBJLISTS=$(STOBJLISTS:.ST=.PF)

lib$(LIB)$(STLIBEXT): $(STOBJLISTS)
	$(RM) $@
	@echo "building static $(LIB) library"
	@dirs=`echo $(STOBJLISTS) | sed -e 's%/OBJS.ST%%g'`; \
		$(AR) cq $@ `for d in $$dirs; do \
			sed -e "s%^%$$d/%" $$d/OBJS.ST; done`
	$(RANLIB) $@

lib$(LIB)$(SHLIBVEXT): $(SHOBJLISTS)
	$(RM) $@
	@echo "building shared $(LIB) library ($(LIBMAJOR).$(LIBMINOR))"
	@dirs=`echo $(SHOBJLISTS) | sed -e 's%/OBJS.SH%%g'`; \
		$(LDCOMBINE) -o $@ `for d in $$dirs; do \
			sed -e "s%^%$$d/%" $$d/OBJS.SH; done`
lib$(LIB)$(SHLIBEXT): lib$(LIB)$(SHLIBVEXT)
	$(LN_S) lib$(LIB)$(SHLIBVEXT) $@

lib$(LIB)$(PFLIBEXT): $(PFOBJLISTS)
	$(RM) $@
	@echo "building profiled $(LIB) library"
	@dirs=`echo $(PFOBJLISTS) | sed -e 's%/OBJS.PF%%g'`; \
		$(AR) cq $@ `for d in $$dirs; do \
			sed -e "s%^%$$d/%" $$d/OBJS.PF; done`
	$(RANLIB) $@

$(TOPLIBD)/lib$(LIB)$(STLIBEXT): lib$(LIB)$(STLIBEXT)
	$(RM) $@
	(cd $(TOPLIBD) && $(LN_S) $(RELDIR)/lib$(LIB)$(STLIBEXT) .)
$(TOPLIBD)/lib$(LIB)$(SHLIBEXT): lib$(LIB)$(SHLIBEXT)
	$(RM) $@
	(cd $(TOPLIBD) && $(LN_S) $(RELDIR)/lib$(LIB)$(SHLIBEXT) .)
$(TOPLIBD)/lib$(LIB)$(SHLIBVEXT): lib$(LIB)$(SHLIBVEXT)
	$(RM) $@
	(cd $(TOPLIBD) && $(LN_S) $(RELDIR)/lib$(LIB)$(SHLIBVEXT) .)
$(TOPLIBD)/lib$(LIB)$(PFLIBEXT): lib$(LIB)$(PFLIBEXT)
	$(RM) $@
	(cd $(TOPLIBD) && $(LN_S) $(RELDIR)/lib$(LIB)$(PFLIBEXT) .)

all-libs: $(LIBLIST)
all-liblinks: $(LIBLINKS)

clean-libs:
	$(RM) lib$(LIB)$(STLIBEXT)
	$(RM) lib$(LIB)$(SHLIBVEXT)
	$(RM) lib$(LIB)$(SHLIBEXT)
	$(RM) lib$(LIB)$(PFEXT)

clean-liblinks:
	$(RM) $(TOPLIBD)/lib$(LIB)$(STLIBEXT)
	$(RM) $(TOPLIBD)/lib$(LIB)$(SHLIBVEXT)
	$(RM) $(TOPLIBD)/lib$(LIB)$(SHLIBEXT)
	$(RM) $(TOPLIBD)/lib$(LIB)$(PFLIBEXT)

# Use the following if links need to be made to $(TOPLIBD):
# all-unix:: all-liblinks
# clean-unix:: clean-liblinks clean-libs

# Use the following if links need not be made:
# all-unix:: all-libs
# clean-unix:: clean-libs

###
### end config/lib.in
