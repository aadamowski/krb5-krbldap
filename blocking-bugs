-*- text -*-

This is a list of blocking bugs that must be addressed before these
changes are committed to the trunk:

* (non-blocking) Do we want --with-ldap or --enable-ldap?  Should
  eDirectory be a separate option?

* I've told the kadmin client to link against -lkdb5 as a hack.
  That's clearly wrong but is because of brokenness in kadm5/clnt.


* The export list needs to match the provided symbols.  Problem is,
  the openldap and edirectory cases provide two different sets of
  symbols.  For now, I've set the list to that used in the openldap
  case.  Longer term, perhaps stubs should be provided for the extra
  names needed in the edirectory case.

* (non-blocking) It appears that the eDirectory code as submitted --
  well, as Ken got it from Sam -- may not have been tested.  Case in
  point: It looks like it'll add "HAVE_EDIRECTORY" (*without* "-D" in
  front) to the compilation flags in a couple of directories.

* Various symbols in the kdb_ldap code duplicate symbols in the kdb5
  library.  The kdb_ldap library needs to link against the kdb5
  library because it uses other symbols from there.  It's not clear to
  me if kdb_ldap should be using the kdb5 symbols or if it really
  wants to be duplicating the work on its own (e.g., potentially using
  a different TL-data encoding, or something).  The symbols are
  krb5_dbe_{lookup,update}_{last_pwd_change,mod_princ_data,tl_data}.
  For now, I hacked around it with a bunch of -D compilation options,
  since declarations for some of these functions don't exist in the
  kdb_ldap code.  They can probably be removed, but wait to hear from
  Novell on that.

* (non-blocking) Can the eDirectory support be inferred at run time?
  Or are we stuck building executables that will do the right thing
  with a non-eDirectory realm or with an eDirectory realm but not
  both?

* On this branch, "make check" fails even when configured without LDAP
  support.
