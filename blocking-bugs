-*- text -*-

This is a list of blocking bugs that must be addressed before these
changes are committed to the trunk:

* Per discussion with Sam: Merge the not-actually-LDAP bits to the
  trunk, keep working a bit on the LDAP bits.

* Move LDAP bits (library, ldap-util) into plugin tree, to collect
  them all in one place.

* Re-evaluate split between plugin and library; if anything is used
  only by the plugin, move it there.

* Remove mutex hacks and assume that the LDAP code either is already
  thread-safe, or will be made so when we also get patches to make the
  KDC multi-threaded.

Probably-non-blocking issues with this code:

* (non-blocking) Do we want --with-ldap or --enable-ldap?  Likewise
  for edirectory.  Leaning towards --with.

* The export list needs to match the provided symbols.  Problem is,
  the openldap and edirectory cases provide two different sets of
  symbols.  For now, I've set the list to that used in the openldap
  case.  Longer term, perhaps stubs should be provided for the extra
  names needed in the edirectory case.

* Various symbols in the kdb_ldap code duplicate symbols in the kdb5
  library.  The kdb_ldap library needs to link against the kdb5
  library because it uses other symbols from there.  It's not clear to
  me if kdb_ldap should be using the kdb5 symbols or if it really
  wants to be duplicating the work on its own (e.g., potentially using
  a different TL-data encoding, or something).  The symbols are
  krb5_dbe_{lookup,update}_{last_pwd_change,mod_princ_data,tl_data}.
  For now, I hacked around it with a bunch of -D compilation options,
  since declarations for some of these functions don't exist in the
  kdb_ldap code.  They can probably be removed, but wait to hear from
  Novell on that.

* (non-blocking) Can the eDirectory support be inferred at run time?
  Or are we stuck building executables that will do the right thing
  with a non-eDirectory realm or with an eDirectory realm but not
  both?

To be investigated:

* Does lib/kdb_ldap need to duplicate the supported-enctype list?  I
  think we can retrieve this from the krb5 library, if the database
  doesn't have the information.

* How about supported salt types?  I don't think we have a separate
  list for those, so it's probably okay for now.

* Are all the new error codes needed?  Is "can't access Kerberos
  database" just a special case of "server internal error"?
